{
    "context": {
        "name": "MQTT",
        "options": {
            "formatter": [
                {
                    "transform": ".toLowerCase()"
                },
                {
                    "regexkey": "\\s",
                    "replace": "",
                    "description": "Remove whitespace"
                },
                {
                    "regexkey": "\\/",
                    "replace": "",
                    "description": "Remove /"
                },
                {
                    "regexkey": "\\+",
                    "replace": "",
                    "description": "Remove +"
                },
                {
                    "regexkey": "\\$",
                    "replace": "",
                    "description": "Remove $"
                },
                {
                    "regexkey": "\\#",
                    "replace": "",
                    "description": "Remove #"
                }
            ],
            "rootTopic-DIRECTIONS": "You can override the root topic by renaming _rootTopic to rootTopic",
            "_rootTopic": "@bind=(state.equipment.alias).replace(' ','-').replace('/','').toLowerCase();",
            "clientId": "@bind='mqttjs_njsPC_'+Math.random().toString(16).substr(2, 8);"
        }
    },
  "events": [
    {
      "name": "config",
      "description": "Don't flood the MQTT bus.",
      "enabled": false
    },
    {
      "name": "controller",
      "description": "Emit time every minute",
      "enabled": true,
      "topics": [
        {
          "topic": "state/time",
          "message": "@bind=data.time;",
          "filter": "@bind=data.status.percent === 100;"
        }
      ]
    },
    {
      "name": "circuit",
      "description": "Populate the circuits topics",
      "topics": [
        {
          "topic": "state/circuits/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isOn?'\"on\"':'\"off\"';}",
          "description": "Bind 'on'/'off' as a message to the state topic."
        },
        {
          "topic": "state/circuits/@bind=data.id;/@bind=data.name;/isOn/string",
          "message": "@bind=data.isOn?'on':'off';",
          "description": "Bind 'on'/'off' as a message to the topic.",
          "enabled": false
        },
        {
          "topic": "state/circuits/@bind=data.id;/@bind=data.name;/isOn/boolean",
          "message": "@bind=data.isOn;",
          "description": "SAMPLE: Bind the isOn as a message to the topic.",
          "enabled": false
        },
        {
          "topic": "state/circuits/@bind=data.id;/@bind=data.name;/lightingTheme",
          "message": "{\"lightingTheme\":@bind=data.lightingTheme;}",
          "description": "SAMPLE: Bind the lighting theme to the topic.",
          "filter": "@bind=data.type.isLight === true;"
        },
        {
          "topic": "state/circuits/@bind=data.id;/customTopicFormatter/@bind=data.name;/isOn",
          "message": "@bind=data.isOn;",
          "description": "SAMPLE: Bind the isOn as a message to the topic with a custom replacer, qos and retain setting.",
          "formatter": [
            {
              "transform": ".toLowerCase()"
            },
            {
              "regexkey": "\\s",
              "replace": "__",
              "description": "Remove whitespace and replace with __"
            },
            {
              "regexkey": "\\/",
              "replace": "__",
              "description": "Remove / and replace with __"
            }
          ],
          "qos": 2,
          "enabled": false
        },
        {
          "topic": "state/circuits/@bind=data.id;/@bind=data.name;/object",
          "message": "@bind=data;",
          "description": "SAMPLE: Bind a JSON object as a message to the topic.",
          "enabled": false
        }
      ]
    },
    {
      "name": "virtualCircuit",
      "description": "Populate the virtual circuits topics",
      "topics": [
        {
          "topic": "state/virtualcircuits/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isOn?'\"on\"':'\"off\"';}",
          "description": "Bind 'on'/'off' as a message to the state topic."
        }
      ]
    },
    {
      "name": "valve",
      "description": "Populate the valve topics",
      "topics": [
        {
          "topic": "state/valve/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isDiverted?'\"on\"':'\"off\"';,\"isVirtual\":@bind=data.isVirtual? true: false;,\"pinId\": @bind=data.pinId;}",
          "description": "Bind 'on'/'off' as a message to the valve state topic."
        }
      ]
    },

    {
      "name": "feature",
      "description": "Populate the features topics",
      "topics": [
        {
          "topic": "state/features/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isOn?'\"on\"':'\"off\"';}",
          "description": "Bind 'on'/'off' as a message to the state topic."
        }
      ]
    },
    {
      "name": "temps",
      "description": "Populate the temps topics",
      "topics": [
        {
          "topic": "state/temps/air",
          "message": "{\"temp\":@bind=data.air;}",
          "description": "Send air temp."
        },
        {
          "topic": "state/temps/solar",
          "message": "{\"temp\":@bind=data.solar;}",
          "description": "Send solar temp.",
          "filter": "@bind=typeof data.solar === 'undefined';"
        },
        {
          "topic": "state/temps/units",
          "message": "{\"units\":@bind=data.units;}"
        }
      ]
    },
    {
      "name": "body",
      "description": "Populate the body topic",
      "topics": [
        {
          "topic": "state/temps/bodies/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isOn?'\"on\"':'\"off\"';}",
          "description": "Bind 'on'/'off' as a message to the state topic."
        },
        {
          "topic": "state/temps/bodies/@bind=data.id;/@bind=data.name;/heatMode",
          "message": "{\"heatMode\":@bind=data.heatMode;}",
          "description": "Send heat mode."
        },
        {
          "topic": "state/temps/bodies/@bind=data.id;/@bind=data.name;/heatStatus",
          "message": "{\"heatStatus\":@bind=data.heatStatus;}",
          "description": "Send heat status."
        },
        {
          "topic": "state/temps/bodies/@bind=data.id;/@bind=data.name;/setPoint",
          "message": "{\"setPoint\":@bind=data.setPoint;}",
          "description": "Send set point."
        },
        {
          "topic": "state/temps/bodies/@bind=data.id;/@bind=data.name;/temp",
          "message": "{\"temp\":@bind=data.temp;}",
          "description": "Send temp."
        }
      ]
    },
    {
      "name": "chlorinator",
      "description": "Populate the chlorinator topic",
      "topics": [
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isOn?'\"on\"':'\"off\"';}",
          "description": "Bind 'on'/'off' as a message to the state topic."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/currentOutput",
          "message": "{\"currentOutput\":@bind=data.currentOutput;}",
          "description": "Send current output."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/poolSetpoint",
          "message": "{\"poolSetpoint\":@bind=data.poolSetpoint;}",
          "description": "Send pool setpoint."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/spaSetpoint",
          "message": "{\"spaSetpoint\":@bind=data.spaSetpoint;}",
          "description": "Send set point."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/status",
          "message": "{\"status\":@bind=data.status;}",
          "description": "Send status."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/superChlor",
          "message": "{\"superChlor\":@bind=data.superChlor?'\"on\"':'\"off\"';}",
          "description": "Send superChlor."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/superChlorHours",
          "message": "{\"superChlorHours\":@bind=data.superChlorHours;}",
          "description": "Send superChlorHours."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/saltLevel",
          "message": "{\"saltLevel\":@bind=data.saltLevel;}",
          "description": "Send salt level."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/type",
          "message": "{\"type\":@bind=data.type;}",
          "description": "Send type."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/targetOutput",
          "message": "{\"targetOutput\":@bind=data.targetOutput;}",
          "description": "Send targetOutput."
        },
        {
          "topic": "state/chlorinators/@bind=data.id;/@bind=data.name;/virtualControllerStatus",
          "message": "{\"virtualControllerStatus\":@bind=data.virtualControllerStatus;}",
          "description": "Send virtualControllerStatus."
        }
      ]
    },
    {
      "name": "lightGroup",
      "description": "Populate the lightGroup topic",
      "topics": [
        {
          "topic": "state/lightgroups/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isOn?'\"on\"':'\"off\"';}",
          "description": "Bind 'on'/'off' as a message to the state topic."
        },
        {
          "topic": "state/lightgroups/@bind=data.id;/@bind=data.name;/action",
          "message": "{\"action\":@bind=data.action;}"
        },
        {
          "topic": "state/lightgroups/@bind=data.id;/@bind=data.name;/lightingTheme",
          "message": "{\"lightingTheme\":@bind=data.lightingTheme;}"
        },
        {
          "topic": "state/lightgroups/@bind=data.id;/@bind=data.name;/type",
          "message": "{\"type\":@bind=data.type;}"
        }
      ]
    },
    {
      "name": "pump",
      "description": "Populate the pumps topic",
      "topics": [
        {
          "topic": "state/pumps/@bind=data.id;/@bind=data.name;",
          "message": "{\"id\":@bind=data.id;,\"isOn\":@bind=data.isOn?'\"on\"':'\"off\"';}",
          "description": "Bind 'on'/'off' as a message to the state topic."
        },
        {
          "topic": "state/pumps/@bind=data.id;/@bind=data.name;/rpm",
          "message": "{\"rpm\":@bind=data.rpm;}"
        },
        {
          "topic": "state/pumps/@bind=data.id;/@bind=data.name;/flow",
          "message": "{\"flow\":@bind=data.flow;}"
        },
        {
          "topic": "state/pumps/@bind=data.id;/@bind=data.name;/watts",
          "message": "{\"watts\":@bind=data.watts;}"
        },
        {
          "topic": "state/pumps/@bind=data.id;/@bind=data.name;/status",
          "message": "{\"status\":@bind=data.status;}"
        }
      ]
    },
    {
      "name": "chemController",
      "description": "Populate the chemControllers topic",
      "topics": [
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/acidTankLevel",
          "message": "{\"acidTankLevel\":@bind=data.acidTankLevel;}"
        },
        {
          "topic": "config/chemControllers/@bind=data.id;/@bind=data.name;/alkalinity",
          "message": "{\"alkalinity\":@bind=data.alkalinity;}"
        },
        {
          "topic": "config/chemControllers/@bind=data.id;/@bind=data.name;/calciumHardness",
          "message": "{\"calciumHardness\":@bind=data.calciumHardness;}"
        },
        {
          "topic": "config/chemControllers/@bind=data.id;/@bind=data.name;/cyanuricAcid",
          "message": "{\"cyanuricAcid\":@bind=data.cyanuricAcid;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/orpDosingTime",
          "message": "{\"orpDosingTime\":@bind=data.orpDosingTime;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/orpLevel",
          "message": "{\"orpLevel\":@bind=data.orpLevel;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/orpSetpoint",
          "message": "{\"orpSetpoint\":@bind=data.orpSetpoint;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/orpTankLevel",
          "message": "{\"orpTankLevel\":@bind=data.orpTankLevel;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/pHDosingTime",
          "message": "{\"pHDosingTime\":@bind=data.pHDosingTime;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/pHLevel",
          "message": "{\"pHLevel\":@bind=data.pHLevel;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/pHSetpoint",
          "message": "{\"pHSetpoint\":@bind=data.pHSetpoint;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/saltLevel",
          "message": "{\"saltLevel\":@bind=data.saltLevel;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/saturationIndex",
          "message": "{\"saturationIndex\":@bind=data.saturationIndex;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/status",
          "message": "{\"status\":@bind=data.status;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/type",
          "message": "{\"type\":@bind=data.type;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/virtualControllerStatus",
          "message": "{\"virtualControllerStatus\":@bind=data.virtualControllerStatus;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/alarms/flow",
          "message": "{\"flow\":@bind=data.flow;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/alarms/ph",
          "message": "{\"ph\":@bind=data.ph;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/alarms/orp",
          "message": "{\"orp\":@bind=data.orp;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/alarms/phTank",
          "message": "{\"phTank\":@bind=data.phTank;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/alarms/orpTank",
          "message": "{\"orpTank\":@bind=data.orpTank;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/alarms/probeFault",
          "message": "{\"probeFault\":@bind=data.probeFault;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/warnings/waterChemistry",
          "message": "{\"waterChemistry\":@bind=data.waterChemistry;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/warnings/phLockout",
          "message": "{\"phLockout\":@bind=data.phLockout;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/warnings/phDailLimitReached",
          "message": "{\"phDailLimitReached\":@bind=data.phDailLimitReached;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/warnings/orpDailyLimitReached",
          "message": "{\"orpDailyLimitReached\":@bind=data.orpDailyLimitReached;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/warnings/invalidSetup",
          "message": "{\"invalidSetup\":@bind=data.invalidSetup;}"
        },
        {
          "topic": "state/chemControllers/@bind=data.id;/@bind=data.name;/warnings/chlorinatorCommError",
          "message": "{\"chlorinatorCommError\":@bind=data.chlorinatorCommError;}"
        }
      ]
    },
    {
      "name": "*",
      "description": "DEFAULT: Sends the entire emitted response.",
      "body": "@bind=data;",
      "enabled": false
    }
  ]
}